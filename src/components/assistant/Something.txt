const [selectedAssistantIds, setSelectedAssistantIds] = useState([]);
const handleSelectAll = (event) => {
    let newSelectedAssistantIds;

    if (event.target.checked) {
      newSelectedAssistantIds = assistants.map((assistant) => assistant.id);
    } else {
      newSelectedAssistantIds = [];
    }

    setSelectedAssistantIds(newSelectedAssistantIds);
  };

  const handleSelectOne = (event, id) => {
    const selectedIndex = selectedAssistantIds.indexOf(id);
    let newSelectedAssistantIds = [];

    if (selectedIndex === -1) {
      newSelectedAssistantIds = newSelectedAssistantIds.concat(selectedAssistantIds, id);
    } else if (selectedIndex === 0) {
      newSelectedAssistantIds = newSelectedAssistantIds.concat(selectedAssistantIds.slice(1));
    } else if (selectedIndex === selectedAssistantIds.length - 1) {
      newSelectedAssistantIds = newSelectedAssistantIds.concat(selectedAssistantIds.slice(0, -1));
    } else if (selectedIndex > 0) {
      newSelectedAssistantIds = newSelectedAssistantIds.concat(
        selectedAssistantIds.slice(0, selectedIndex),
        selectedAssistantIds.slice(selectedIndex + 1)
      );
    }

    setSelectedAssistantIds(newSelectedAssistantIds);
  };

  {
     <TableCell padding="checkbox">
                  <Checkbox
                    checked={selectedAssistantIds.length === assistants.length}
                    color="primary"
                    indeterminate={
                      selectedAssistantIds.length > 0 &&
                      selectedAssistantIds.length < assistants.length
                    }
                    onChange={handleSelectAll}
                  />
                </TableCell> 
  }

//    selected={selectedAssistantIds.indexOf(assistant.id) !== -1}

  {
    <TableCell padding="checkbox">
                    <Checkbox
                      checked={selectedAssistantIds.indexOf(assistant.id) !== -1}
                      onChange={(event) => handleSelectOne(event, assistant.id)}
                      value="true"
                    />
                  </TableCell> 
  }
